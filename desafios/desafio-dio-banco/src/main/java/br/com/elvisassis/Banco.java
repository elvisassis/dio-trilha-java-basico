package br.com.elvisassis;import br.com.elvisassis.exception.ContaInvalidaException;import lombok.Getter;import lombok.Setter;import java.util.ArrayList;import java.util.List;@Getter@Setterpublic class Banco {    private String nome;    private static final List<IConta> contas = new ArrayList<>();    private static final Banco instance = new Banco("Banco Elvis Assis");    private Banco(String nome) {        this.nome = nome;    }    public static void adicionarConta(IConta conta) {        contas.add(conta);    }    public static Banco getInstance() {        return instance;    }    public void removerConta(Conta conta) {        contas.remove(conta);    }    public IConta login(int numeroConta) {        if (contas.isEmpty()) throw new ContaInvalidaException();        return contas.stream()                .filter(conta -> conta.getNumeroConta() == numeroConta)                .findFirst()                .orElseThrow(ContaInvalidaException::new);    }    public void imprimirContas() {        System.out.println("=== Contas Banco ===");        for (IConta conta : contas) {            System.out.println(conta.toString());        }    }    public void imprimirExtrato() {        System.out.println("=== Extrato Banco ===");        System.out.println(String.format("Nome: %s", this.nome));        System.out.println("Contas:");        for (IConta conta : contas) {            conta.imprimirExtrato();        }    }}